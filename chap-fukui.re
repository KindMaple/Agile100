= アジャイルに「アジャイル開発」の「開発」はいらない

//flushright{
フクイ（@keita_kitami_）
//}


私はとあるIT機器メーカーのサービス子会社で情シス〜社内向けのIT部門で長年勤めています。そのなかで主に新規のシステム開発や既存のシステムの刷新のプロジェクトに多く携わっています。その中でけっこう悲惨なケースにも巻き込まれたり、見たりしてきました。アジャイルとの出会いは４〜５年前で、もしかしたらこの不幸の連鎖から逃れられるきっかけにならないかと思い取り組み始めたというのがはじまりです。


今はクラウド製品のコミュニティやRPAなどのコミュニティ、アジャイルのコミュニティに参加してLTをしたりイベントレポートを書いたり、たまに運営のお手伝いをしています。

== アジャイルではない組織にアジャイル開発を導入する難しさ


組織の方針に基づいた活動ではなく、自分でアジャイルに取り組んでいるので自分のことは「野良アジャイラー」と思っっていますが、逆にそういった中でアジャイルと密接に繋がっている組織の文化、意識の壁を痛感しながらの経験は貴重といえば貴重なので、そのあたりの話をしてみたいと思います。


アジャイルという言葉が世に出るまでは従来の経験則に基づいた開発の考え方でプロジェクトというものが考えられます。これは「最初に完璧な要件・仕様を決める」ということだけではなく、「ITエンジニアは顧客の作って欲しいというものを黙って作る」とか、「上流で決めたことには絶対に逆らわない」「開発のプロセスごとにゲートを設定する」とか、「短いプロジェクト期間中にできるだけ要望を詰め込もう」とか・・・・挙げはじめたらキリがないくらいそのギャップはものすごく大きなものです。


たとえ「これはアジャイルで開発しよう」と組織が決定したとしても、残念なことにそういったあらゆるものが健全なチーム運営の邪魔をしてしまいます。決められた仕様のプロダクトを速く安くつくるのがアジャイル・・・とか思われていたらかなり悲惨です。


その反面、世の中の進歩は目覚ましく、IT側から見ても今や仕様書に基づいた、長ったらしいCOBOLのコードでシステムを作ることもないし、クラウド・・・とくにSaaSやPaaSが中心になり複数のサービスをAPIを使用して組み合わせて使ったりたりして柔軟に構築するのが当たり前になってきているし、ビジネスの側面もVUCAとかDXを取り上げるまでもなく、正解のない世界になっています。


アジャイルが好きか嫌いかは別にしても従来のやり方ではできなくなっているので、頑張るしか無いのですけれども。

== システム運用に導入してみよう


開発へのアジャイル導入の話は愚痴になりそうなので一旦おいといて、開発以外の分野でのアジャイル導入の話をしたいと思います。


アジャイルといえば「アジャイル開発」と呼ばれるようにソフトウェアの開発の手法のように語られることが多いのですが、実はそんなことではなくて、創造的な仕事であるならば、どんな仕事にも活用できる「思想」とか「考え方」のようなものだと思います。


それを実感したのはScrum.Incさんのスクラムマスター研修を受けていたときの話でした。本題ではないのですが、サンプルとしてテキストに掲載されていたのがシステム運用チームに適用された例が紹介されていました。たしか割り込み作業に対しどう対処するかという趣旨の説明だったと思いますが、とにかくそこで感じたのは「運用チームでもアジャイルやっても良いんだ！！」という事でした。


システムの運用といえば、基本的にもう出来上がって稼働しているITシステムに関して日常的に発生するシステム障害や問い合わせに対応するというのが主な仕事です。情報システムを使い続けるには必要な存在ではありますが、開発に比べて後ろ向きな仕事が中心であって、なかなか評価されにくい仕事だったりします。技術的にも最新の技術を使うこともなく、枯れ切ったような古いシステムを応急措置的にメンテナンスするというものです。

== こっそり取り組みはじめる


帰って来て、取り組もうとターゲットにしたのはひとつの運用・保守チームです。基幹システムというほどの規模ではない小さなシステムを複数扱っているチームで、従来サイロ的に縦割りでそれぞれの担当者が対応していたものをチームを編成して対応し始めたばかりでした。

=== 最初にやったのは工数の見える化


このチームで最初に取り組んだのは「工数調査」です。アジャイルに関係なとお思いかもしれませんが、まずは「活動する時間」をどれくらい確保できるか見通しを立てる必要がありました。２ヶ月位調査した結果は70%以上はシステム障害対応や問い合わせ対応などの受け身の割り込み作業で占められていました。
その時間を少しでも前向きなシステムの改善に当てられるようにカイゼンすることを目的に活動することにしました。工数を分析した結果、割り込み作業は量にムラがあり、急がなくても良い仕事も含まれていることがわかったので思い切って30％くらいは前向きな活動に充てることを決めました。


このあたりは誰の介入も受ける可能性もなく、わりとスムーズに決めることが出来ました。開発プロジェクトであればエライ人たちの関与がありますが、日常の運用保守はせいぜい月に１回の定期報告があるくらいなので、チームのマネージャーとメンバーが同意できれば、誰にも知られずに簡単にできます。障害対応が遅くなる懸念はありましたが、気づかれるほどの影響はありませんでしたので、このあたりはチームの直属のマネージャーの思い切りだけです。


ちなみにメンバーにはアジャイルという言葉は全く使いませんでした

=== 取り組んだプラクティスのはたったの３つ


やったのは単純に３つだけです。スプリントの設定とプロダクトバックログを作ったのと、ふりかえりをやったくらいです。


スプリントは１ヶ月、長く感じるかもしれませんが、社内システムの場合には月末締め前後にはるりースできないことや、今まで数ヶ月に１回ランダムにリリースしていた事、それぞれのシステムのシステム環境が全く別なので、本番環境にデプロイするのもちょっと大変・・・・ということを受けて決めました。まずはサイクルを意識する事が大事なので、ここは緩めに決めました。


そしてプロダクトバックログです。この言葉は使わずに「対応すべき課題」のリストを作ることからはじめました。運用の世界では障害の根本対応である問題、高級処置への対応、運用作業の改善、ドキュメントの修正やリファクタリングなどの保守の改善が挙げられます。それすべてにステークホルダーが居ますが、通常の場合には担当するマネージャーがプロダクトオーナーの役割を果たすことが出来ます。このへんはあまり注目されない運用の世界は非常にやりやすいと思います。


そしてふりかえりをして、自分たちでやり方を考えてすすめていく・・・単純にそれくらいです。最初は週に一回単位に状況の確認とふりかえりを実施していくと必要に応じてその他のイベントは勝手に出来ていくので、そこはチームに任せていました。なんかやっているようですが、マネージャー以上はそこには口を挟まない・・・・でもこのチームの場合はうまくいった感じでした。

=== 気がつけば結果がついてくる


そうして活動し始めた「こっそりアジャイル」でしたが、わりとうまく成果が出て数カ月後にはチームの工数のうち後ろ向きの作業が少なくなり、改善にかけられる工数が60%を超えるようになりました。実際にリリースされたプログラムのリリースも倍以上に伸び、改善されて障害対応や運用作業が軽減され、さらに時間が出来るという好循環が生まれていました。


このチームで起きたできごとはそういった生産性に関することばかりではありません。


気がついたら勉強会を実施していたり、ペアプロ的なことをはじめたり、世の中がコロナ禍に襲われた直後からコミュニケーションツールを開放してチームで声をかけながら仕事をしていたり・・・・とチームで自走していました。

== 実は最も大事なこと


実は前述の３つのプラクティスのほかにひとつだけ仕込んだことがあります。これはカッコよく言うと「エンジニアへのリスペクト」です。具体的にはエンジニアとして成長する機会を作ることです。今回のチームメンバーはいわゆるSESのメンバーです。SESの場合、顧客のオフィスで仕事をする関係上、なかなか勉強する機会は無いのですが、「月に１日は外で勉強する」というルールを決め、それを所属会社の営業や上司にも伝えてお願いをしました。理想は自主的な活動が良いのですが、心理的な安全性が無いので義務にしました。


夜中の自主的な勉強会もありますが、ベンダーが行うセミナーは基本的に昼間の時間です。それに出席できないというのはエンジニアの成長のうえで非常にマイナスだと思いますが、なかなか出来ていないのが多くの現状だと思います。幸いマイクロソフトさんを始めとして無料のセミナーもたくさんあったので、チームメンバーはさまざまな新しい技術に触れる機会を得られました。


後日一人のメンバーが嬉しそうに「デブサミに行ってきました！」と報告されたときにはこみ上げてくるものがありました。


運用保守の世界は閉じられた世界でのある意味退屈な繰り返しですが、外の世界や技術に触れることで世間とのギャップや自分たちがやるべきことも知ることが出来るので、実はこの事が一番のエンジンであると今では感じます。

== さいごに


今回、手探りで始めた運用保守の世界でのアジャイル導入について紹介しましたが、この世界は同一メンバーであること、継続的活動であること・・・など一般的な短い期限が決められた開発プロジェクトよりもアジャイルへの適応性が高いような気がします。


しかも説得する相手は直接の上司くらいで、周期的にやる、リスト作るだけなので反対される要素も少ないと思います。
アジャイルはシステム開発だけのものではありません


ちなみに沢渡あまねさんと新井剛さんの共著「ここはウォーターフォール市、アジャイル町」が出たときには歓喜してしまいました。


@<href>{https://www.shoeisha.co.jp/book/detail/9784798165387, https://www.shoeisha.co.jp/book/detail/9784798165387}


　

//embed{
    \begin{minipage}{.1\linewidth}
        \centering
        \includegraphics[width=.75\linewidth]{images/chap-fukui/profile-fukui.jpg}
    \end{minipage}
    \begin{minipage}{.89\linewidth}
        フクイ @keita\_kitami\_ https://twitter.com/keita\_kitami\_\\
        \end{minipage}
    \hspace{1ex}
//}

とあるIT機器メーカーのサービス子会社で情シス〜社内向けのIT部門で長年勤めています。また最近はクラウド製品のコミュニティやRPAなどのコミュニティ、アジャイルのコミュニティに参加してLTをしたりイベントレポートを書いたり、たまに運営のお手伝いをしています。